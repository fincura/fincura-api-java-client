/*
 * Fincura Integration API
 * This [REST API](https://en.wikipedia.org/wiki/Representational_state_transfer) allows you to interact with the Fincura processing and insights engine.   # Authentication  This API uses API keys generated from a Fincura User account. To get access to your User account, speak with you Fincura account manager.  # Accepted Media Types  | File&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Extension(s)     | Content-Type(s) | | -------------------------------- |-------------- | ------------ | | PDF File | .pdf | `application/pdf` , `application/x-pdf` | | Excel File | .xls | `application/vnd.ms-excel`  | | Excel File | .xlsx | `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`  | | PNG Image | .png | `image/png`  | | GIF Image | .gif | `image/gif`  | | JPG Image | .jpg, .jpeg | `image/jpeg`  | | GIF Image | .gif | `image/gif`  |   # Getting Started  1. [Create a Borrower](#operation/createBorrower)  2. [Add a file](#operation/createDocumentFile) for that Borrower. 3. Analyze in the Fincura App  ****
 *
 * The version of the OpenAPI document: 1.2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.fincura.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Borrower
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-17T21:24:18.400Z[GMT]")
public class Borrower {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CREATED_DATE = "created_date";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_PORTFOLIO_UUID = "portfolio_uuid";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO_UUID)
  private UUID portfolioUuid;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contact_email";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_CONTACT_PERSON = "contact_person";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON)
  private String contactPerson;

  public static final String SERIALIZED_NAME_CONTACT_PHONE = "contact_phone";
  @SerializedName(SERIALIZED_NAME_CONTACT_PHONE)
  private String contactPhone;

  public static final String SERIALIZED_NAME_SIC_CODE = "sic_code";
  @SerializedName(SERIALIZED_NAME_SIC_CODE)
  private String sicCode;

  public static final String SERIALIZED_NAME_NAICS_CODE = "naics_code";
  @SerializedName(SERIALIZED_NAME_NAICS_CODE)
  private String naicsCode;

  /**
   * Gets or Sets sicIndustry
   */
  @JsonAdapter(SicIndustryEnum.Adapter.class)
  public enum SicIndustryEnum {
    UNKNOWN("UNKNOWN"),
    
    AGRICULTURE_FORESTRY_FISHING("AGRICULTURE_FORESTRY_FISHING"),
    
    CONSTRUCTION("CONSTRUCTION"),
    
    MINING("MINING"),
    
    TRANSPORTATION_AND_PUBLIC_UTILITIES("TRANSPORTATION_AND_PUBLIC_UTILITIES"),
    
    WHOLESALE_TRADE("WHOLESALE_TRADE"),
    
    RETAIL_TRADE("RETAIL_TRADE"),
    
    MANUFACTURING("MANUFACTURING"),
    
    FINANCE_INSURANCE_REAL_ESTATE("FINANCE_INSURANCE_REAL_ESTATE"),
    
    SERVICES("SERVICES"),
    
    PUBLIC_ADMINISTRATION("PUBLIC_ADMINISTRATION");

    private String value;

    SicIndustryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SicIndustryEnum fromValue(String value) {
      for (SicIndustryEnum b : SicIndustryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SicIndustryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SicIndustryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SicIndustryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SicIndustryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SIC_INDUSTRY = "sic_industry";
  @SerializedName(SERIALIZED_NAME_SIC_INDUSTRY)
  private SicIndustryEnum sicIndustry;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "custom_attributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private Object customAttributes;


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUuid() {
    return uuid;
  }




  public Borrower name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the Borrower. Must be unique across Borrower records
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the Borrower. Must be unique across Borrower records")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }




  public Borrower portfolioUuid(UUID portfolioUuid) {
    
    this.portfolioUuid = portfolioUuid;
    return this;
  }

   /**
   * UUID of the Portfolio for this Borrower. (see [Portfolios](#tag/Portfolios))
   * @return portfolioUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID of the Portfolio for this Borrower. (see [Portfolios](#tag/Portfolios))")

  public UUID getPortfolioUuid() {
    return portfolioUuid;
  }


  public void setPortfolioUuid(UUID portfolioUuid) {
    this.portfolioUuid = portfolioUuid;
  }


  public Borrower externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External ID is used to uniquely identify a record from your system in our system. Must be unique across records.
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "External ID is used to uniquely identify a record from your system in our system. Must be unique across records.")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public Borrower contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * Borrower contact email
   * @return contactEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Borrower contact email")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public Borrower contactPerson(String contactPerson) {
    
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * Borrower contact Full Name
   * @return contactPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Borrower contact Full Name")

  public String getContactPerson() {
    return contactPerson;
  }


  public void setContactPerson(String contactPerson) {
    this.contactPerson = contactPerson;
  }


  public Borrower contactPhone(String contactPhone) {
    
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   * Borrower contact Phone Number
   * @return contactPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Borrower contact Phone Number")

  public String getContactPhone() {
    return contactPhone;
  }


  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }


  public Borrower sicCode(String sicCode) {
    
    this.sicCode = sicCode;
    return this;
  }

   /**
   * Get sicCode
   * @return sicCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSicCode() {
    return sicCode;
  }


  public void setSicCode(String sicCode) {
    this.sicCode = sicCode;
  }


  public Borrower naicsCode(String naicsCode) {
    
    this.naicsCode = naicsCode;
    return this;
  }

   /**
   * Get naicsCode
   * @return naicsCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNaicsCode() {
    return naicsCode;
  }


  public void setNaicsCode(String naicsCode) {
    this.naicsCode = naicsCode;
  }


  public Borrower sicIndustry(SicIndustryEnum sicIndustry) {
    
    this.sicIndustry = sicIndustry;
    return this;
  }

   /**
   * Get sicIndustry
   * @return sicIndustry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SicIndustryEnum getSicIndustry() {
    return sicIndustry;
  }


  public void setSicIndustry(SicIndustryEnum sicIndustry) {
    this.sicIndustry = sicIndustry;
  }


  public Borrower customAttributes(Object customAttributes) {
    
    this.customAttributes = customAttributes;
    return this;
  }

   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustomAttributes() {
    return customAttributes;
  }


  public void setCustomAttributes(Object customAttributes) {
    this.customAttributes = customAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Borrower borrower = (Borrower) o;
    return Objects.equals(this.uuid, borrower.uuid) &&
        Objects.equals(this.name, borrower.name) &&
        Objects.equals(this.createdDate, borrower.createdDate) &&
        Objects.equals(this.portfolioUuid, borrower.portfolioUuid) &&
        Objects.equals(this.externalId, borrower.externalId) &&
        Objects.equals(this.contactEmail, borrower.contactEmail) &&
        Objects.equals(this.contactPerson, borrower.contactPerson) &&
        Objects.equals(this.contactPhone, borrower.contactPhone) &&
        Objects.equals(this.sicCode, borrower.sicCode) &&
        Objects.equals(this.naicsCode, borrower.naicsCode) &&
        Objects.equals(this.sicIndustry, borrower.sicIndustry) &&
        Objects.equals(this.customAttributes, borrower.customAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, createdDate, portfolioUuid, externalId, contactEmail, contactPerson, contactPhone, sicCode, naicsCode, sicIndustry, customAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Borrower {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    portfolioUuid: ").append(toIndentedString(portfolioUuid)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    sicCode: ").append(toIndentedString(sicCode)).append("\n");
    sb.append("    naicsCode: ").append(toIndentedString(naicsCode)).append("\n");
    sb.append("    sicIndustry: ").append(toIndentedString(sicIndustry)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

