/*
 * Fincura API
 * This [REST API](https://en.wikipedia.org/wiki/Representational_state_transfer) allows you to interact with the Fincura processing and insights engine.   # Authentication  This API uses API keys generated from a Fincura User account. To get access to your User account, speak with you Fincura account manager.  # Accepted Media Types  | File&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Extension(s)     | Content-Type(s) | | -------------------------------- |-------------- | ------------ | | PDF File | .pdf | `application/pdf` , `application/x-pdf` | | Excel File | .xls | `application/vnd.ms-excel`  | | Excel File | .xlsx | `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`  | | Excel File | .xlsm | `application/vnd.ms-excel.sheet.macroEnabled.12`  | | PNG Image | .png | `image/png`  | | GIF Image | .gif | `image/gif`  | | JPG Image | .jpg, .jpeg | `image/jpeg`  | | GIF Image | .gif | `image/gif`  |   # Getting Started  1. [Create a Borrower](#operation/createBorrower)  2. [Add a file](#operation/createDocumentFile) for that Borrower. 3. Analyze in the Fincura App  ****
 *
 * The version of the OpenAPI document: 1.2.6
 * Contact: support@fincura.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.fincura.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.fincura.client.model.LoanFinancialsCells;
import org.threeten.bp.LocalDate;

/**
 * LoanFinancialsDataColumns
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-15T17:13:42.707Z[GMT]")
public class LoanFinancialsDataColumns {
  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private String header;

  public static final String SERIALIZED_NAME_STATEMENT_DATE = "statement_date";
  @SerializedName(SERIALIZED_NAME_STATEMENT_DATE)
  private LocalDate statementDate;

  public static final String SERIALIZED_NAME_REPORTING_PERIOD = "reporting_period";
  @SerializedName(SERIALIZED_NAME_REPORTING_PERIOD)
  private String reportingPeriod;

  public static final String SERIALIZED_NAME_PREPARATION_TYPE = "preparation_type";
  @SerializedName(SERIALIZED_NAME_PREPARATION_TYPE)
  private String preparationType;

  public static final String SERIALIZED_NAME_MONTHS_IN_INTERVAL = "months_in_interval";
  @SerializedName(SERIALIZED_NAME_MONTHS_IN_INTERVAL)
  private Integer monthsInInterval;

  public static final String SERIALIZED_NAME_REPORTING_INTERVAL = "reporting_interval";
  @SerializedName(SERIALIZED_NAME_REPORTING_INTERVAL)
  private String reportingInterval;

  public static final String SERIALIZED_NAME_PREPARED_BY = "prepared_by";
  @SerializedName(SERIALIZED_NAME_PREPARED_BY)
  private String preparedBy;

  public static final String SERIALIZED_NAME_CELLS = "cells";
  @SerializedName(SERIALIZED_NAME_CELLS)
  private List<LoanFinancialsCells> cells = null;


   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHeader() {
    return header;
  }




   /**
   * Get statementDate
   * @return statementDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getStatementDate() {
    return statementDate;
  }




   /**
   * Get reportingPeriod
   * @return reportingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportingPeriod() {
    return reportingPeriod;
  }




   /**
   * Get preparationType
   * @return preparationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreparationType() {
    return preparationType;
  }




   /**
   * Get monthsInInterval
   * @return monthsInInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMonthsInInterval() {
    return monthsInInterval;
  }




   /**
   * Get reportingInterval
   * @return reportingInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportingInterval() {
    return reportingInterval;
  }




   /**
   * Get preparedBy
   * @return preparedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreparedBy() {
    return preparedBy;
  }




   /**
   * Get cells
   * @return cells
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LoanFinancialsCells> getCells() {
    return cells;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanFinancialsDataColumns loanFinancialsDataColumns = (LoanFinancialsDataColumns) o;
    return Objects.equals(this.header, loanFinancialsDataColumns.header) &&
        Objects.equals(this.statementDate, loanFinancialsDataColumns.statementDate) &&
        Objects.equals(this.reportingPeriod, loanFinancialsDataColumns.reportingPeriod) &&
        Objects.equals(this.preparationType, loanFinancialsDataColumns.preparationType) &&
        Objects.equals(this.monthsInInterval, loanFinancialsDataColumns.monthsInInterval) &&
        Objects.equals(this.reportingInterval, loanFinancialsDataColumns.reportingInterval) &&
        Objects.equals(this.preparedBy, loanFinancialsDataColumns.preparedBy) &&
        Objects.equals(this.cells, loanFinancialsDataColumns.cells);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, statementDate, reportingPeriod, preparationType, monthsInInterval, reportingInterval, preparedBy, cells);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanFinancialsDataColumns {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    statementDate: ").append(toIndentedString(statementDate)).append("\n");
    sb.append("    reportingPeriod: ").append(toIndentedString(reportingPeriod)).append("\n");
    sb.append("    preparationType: ").append(toIndentedString(preparationType)).append("\n");
    sb.append("    monthsInInterval: ").append(toIndentedString(monthsInInterval)).append("\n");
    sb.append("    reportingInterval: ").append(toIndentedString(reportingInterval)).append("\n");
    sb.append("    preparedBy: ").append(toIndentedString(preparedBy)).append("\n");
    sb.append("    cells: ").append(toIndentedString(cells)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

